top = '..'

def build(bld):
    matron_sources = [
        'src/config.cc',
        'src/device/device.cc',
        'src/device/device_hid.cc',
        'src/device/device_list.cc',
        'src/device/device_midi.cc',
        'src/device/device_monitor.cc',
        'src/device/device_monome.cc',
        'src/device/device_crow.cc',
        'src/osc.cc',
        'src/hardware/battery.cc',
        'src/hardware/i2c.cc',
        'src/hardware/input.cc',
        'src/hardware/io.cc',
        'src/hardware/platform.cc',
        'src/hardware/screen.cc',
        'src/hardware/stat.cc',
	'src/hardware/screen/fbdev.cc',
        'src/hardware/input/gpio.cc',
        'src/args.cc',
        'src/events.cc',
        'src/hello.cc',
        'src/input.cc',
        'src/lua_eval.cc',
        'src/main.cc',
        'src/metro.cc',
        'src/oracle.cc',
        'src/weaver.cc',
        'src/snd_file.cc',
        'src/system_cmd.cc',
        'src/clock.cc',
        'src/clocks/clock_internal.cc',
        'src/clocks/clock_midi.cc',
        'src/clocks/clock_crow.cc',
        'src/clocks/clock_scheduler.cc',
        # FIXME: from rebase
        'src/jack_client.c',
    ]

    if bld.env.NORNS_DESKTOP:
        matron_sources += [
            'src/hardware/screen/sdl.cc',
            'src/hardware/input/sdl.cc',
        ]

    matron_includes = [
        'src',
        'src/device',
        'src/hardware',
        'lua',
    ]

    matron_libs = [
        'pthread',
        'm',
    ]

    matron_use = [
        'ALSA',
        'LIBUDEV',
        'LIBEVDEV',
        'CAIRO',
        'CAIRO-FT',
        'LUA53',
        'LIBLO',
        'LIBMONOME',
        'SNDFILE',
        'AVAHI-COMPAT-LIBDNS_SD',
        'JACK',
    ]

    if bld.env.NORNS_DESKTOP:
        matron_libs.append('SDL2')
        matron_use.append('SDL2')

    if bld.env.ENABLE_ABLETON_LINK:
        matron_sources += ['src/clocks/clock_link.cc']
        matron_includes += ['../third-party/link/extensions/abl_link/include']
        matron_libs += ['stdc++']
        matron_use += ['LIBLINK_C']

    matron_cflags=['-O3', '-Wall', '-std=c11']

    if bld.env.NORNS_RELEASE:
        matron_cflags += [
            '-mcpu=cortex-a53',
            '-mtune=cortex-a53',
            '-mfpu=neon-fp-armv8',
            '-mfloat-abi=hard',
        ]

    if bld.env.PROFILE_MATRON:
      #bld.env.append_unique('CFLAGS', ['-pg'])
      bld.env.append_unique('CXXFLAGS', ['-pg'])
      bld.env.append_unique('LDFLAGS', ['-pg'])

    bld.program(features='cxx cxxprogram',
        source=matron_sources,
        target='matron',
        includes=matron_includes,
        use=matron_use,
        lib=matron_libs,
        cflags=matron_cflags,
        ldflags=['-Wl,-export-dynamic'])
